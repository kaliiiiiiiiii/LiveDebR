name: Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions:
      contents: write
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3                         # Check out the repository first
    - name: Read release.md and use it as the body of the new release
      id: read_release
      shell: bash
      run: |
        r=$(cat release.md)                              # Read release.md from the repo root
        r="${r//'%'/'%25'}"                              # Escape %
        r="${r//$'\n'/'%0A'}"                            # Escape newlines (\n)
        r="${r//$'\r'/'%0D'}"                            # Escape carriage returns (\r)
        echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT         # Output the result to RELEASE_BODY
    - name: Build the release binary
      run: cargo build --release                        # Build your binary
    - name: Create and zip the builder directory
      run: |
        mkdir -p builder                                # Create the /builder directory
        cp target/release/LiveDebR builder/            # Copy the binary to the directory
        zip -r builder.zip builder                     # Zip the /builder directory
    - name: Upload the builder archive
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: builder.zip                              # Upload the zip file
        asset_name: builder_linux_amd64.zip           # Name of the release asset
        tag: ${{ github.ref_name }}                   # Use the tag name
        overwrite: true                               # Allow overwriting if it already exists
        prerelease: true                              # Mark the release as prerelease
        make_latest: false                            # Do not mark as the latest release
        body: ${{ steps.read_release.outputs.RELEASE_BODY }} # Use the body read from release.md
