name: Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    container:
      image: debian:latest
      options: --privileged

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies (make, curl, Rust, build-essential, ntpdate)
      run: |
        apt update
        apt install -y make curl build-essential

        # Install Rust via rustup (non-interactive with -y)
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - name: Read release.md and replace {$tag} with actual tag
      id: read_release
      shell: bash
      run: |
        r=$(cat release.md)
        # Replace {$tag} with the actual tag from the workflow
        r="${r//\{\$tag\}/${{ github.ref_name }}}"
        r="${r//'%'/'%25'}"  # Escape %
        r="${r//$'\n'/'%0A'}"  # Escape newlines
        r="${r//$'\r'/'%0D'}"  # Escape carriage returns
        echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT

    - name: Build builder
      run: |
        # Use . to source the cargo environment
        . "$HOME/.cargo/env"  # This works in both sh and bash
        make builder
    - name: Upload builder
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/builder.tar.gz
        asset_name: builder_linux_amd64_deb.tar.gz 
        tag: ${{ github.ref_name }}
        overwrite: true
        prerelease: true
        make_latest: true
        body: ${{ steps.read_release.outputs.RELEASE_BODY }}
    - name: Build iso
      run: |
        make build
        gzip -c out/live/live-image-amd64.hybrid.iso > out/live-image-amd64.hybrid.iso.gz
    - name: Upload build
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/live-image-amd64.hybrid.iso.gz
        asset_name: live-image-amd64.hybrid.iso.gz
        tag: ${{ github.ref_name }}
        overwrite: true
        prerelease: true
        make_latest: true
        body: ${{ steps.read_release.outputs.RELEASE_BODY }}
