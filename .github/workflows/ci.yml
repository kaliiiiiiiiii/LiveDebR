name: Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    container:
      image: debian:latest
      options: --privileged

    steps:
    - uses: actions/checkout@v3
    
    - name: Integrate cache
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt
          out/live/cache
        key: debian-apt-3

    - name: Install deps
      run: |
        echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/01keep-debs
        apt-get update -y
        apt-get install -y make procps wget python3
        wget https://mega.nz/linux/repo/Debian_12/amd64/megacmd-Debian_12_amd64.deb
        apt-get install -y "$PWD/megacmd-Debian_12_amd64.deb"
        make deps

    - name: Build builder
      run: |
        . "$HOME/.cargo/env"  # add freshly installed cargo to $path
        make builder
        
    - name: Prepare release.md
      id: read_release
      shell: bash
      run: |
        python3 -c "import os, uuid; final_content=open('release.md').read().replace('{tag}', '${{ github.ref_name }}')+'\n'+open('debr_usage.md').read(); open('release.md', 'w').write(final_content); delim=str(uuid.uuid1()); fh=open(os.environ['GITHUB_OUTPUT'], 'a'); print(f'RELEASE_BODY<<{delim}', file=fh); print(final_content, file=fh); print(delim, file=fh); fh.close()"
    - name: Upload builder
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/builder.tar.gz
        asset_name: builder_linux_amd64_deb.tar.gz 
        tag: ${{ github.ref_name }}
        overwrite: true
        prerelease: false
        make_latest: true
        body: ${{ steps.read_release.outputs.RELEASE_BODY }}
      
    - name: Build iso
      run: |
        make build
    
    - name: Mega upload
      id: mega_upload
      run: |
          CMD_DIR="/github/home/.megaCmd"
          LOG_FILE="$CMD_DIR/megacmdserver.log"
          ISO="live-image-amd64-${{ github.ref_name }}.hybrid.iso.gz"
          DIR="/liveDebR"

          mkdir release && gzip -c out/live/live-image-amd64.hybrid.iso > "release/$ISO"
          mkdir -p "$CMD_DIR" && touch "$LOG_FILE" && nohup tail -f "$LOG_FILE" &
          mega-login "$USERNAME" "$PASSWORD"
          mega-put -c "release/$ISO" "$DIR/"
          mega-export -a -f "$DIR/$ISO" > mega_url.txt
          grep -o 'https://mega.nz/file/[^"]*' mega_url.txt > url.txt

          # put mega url into release.md
          python3 -c "import os, uuid; url=open('url.txt').read().strip(); release=open('release.md').read().replace('{MEGAURL}', url); open('release.md', 'w').write(release); delim=str(uuid.uuid1()); fh=open(os.environ['GITHUB_OUTPUT'], 'a'); print(f'RELEASE_BODY<<{delim}', file=fh); print(release, file=fh); print(delim, file=fh); fh.close()"
      env:
          USERNAME: ${{ secrets.MEGA_USERNAME }}
          PASSWORD: ${{ secrets.MEGA_PASSWORD }}
    
    - name: Upload keyringer & update release body
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/builder/assets/keyringer
        asset_name: keyringer
        tag: ${{ github.ref_name }}
        overwrite: true
        make_latest: true
        body: ${{ steps.mega_upload.outputs.RELEASE_BODY }}
