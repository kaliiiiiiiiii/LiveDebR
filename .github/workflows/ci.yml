name: Build

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    container:
      image: debian:latest
      options: --privileged

    steps:
    - uses: actions/checkout@v3
    
    - name: Restore apt cache
      uses: actions/cache/restore@v4
      id: capt-cache-restore
      with:
        path: |
          /var/cache/apt
          out/live/cache
        key: debian-apt-2

    - name: Install deps
      run: |
        echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/01keep-debs
        apt-get update -y
        apt-get install -y make procps wget
        wget https://mega.nz/linux/repo/Debian_12/amd64/megacmd-Debian_12_amd64.deb
        apt-get install -y "$PWD/megacmd-Debian_12_amd64.deb"
        make deps

    - name: Build builder
      run: |
        . "$HOME/.cargo/env"  # add freshly installed cargo to $path
        make builder
        
    - name: Prepare release.md
      id: read_release
      shell: bash
      run: |
        # Escape function
        escape() {
              local content="$1"
              content="${content//'%'/'%25'}"
              content="${content//$'\n'/'%0A'}"
              content="${content//$'\r'/'%0D'}"
              content="${content//&/'%26'}"
              content="${content//#/'%23'}"
              echo "$content"
          }

        # Process release.md
        release_content=$(cat release.md)
        release_content="${release_content//\{tag\}/${{ github.ref_name }}}"
        escaped_release=$(escape "$release_content")

        # Process debr_usage.md
        usage_content=$(cat debr_usage.md)
        escaped_usage=$(escape "$usage_content")

        # Combine results
        final_release="${escaped_release}%0A${escaped_usage}"
        echo "RELEASE_BODY=$final_release" >> $GITHUB_OUTPUT

    - name: Upload builder
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/builder.tar.gz
        asset_name: builder_linux_amd64_deb.tar.gz 
        tag: ${{ github.ref_name }}
        overwrite: true
        prerelease: true
        make_latest: true
        body: ${{ steps.read_release.outputs.RELEASE_BODY }}
      
    - name: Build iso
      run: |
        make build
    
    - name: Save apt cache
      uses: actions/cache/save@v4
      with:
        path: |
          /var/cache/apt
          out/live/cache
        key: ${{ steps.capt-cache-restore.outputs.cache-primary-key }}
    
    - name: Mega upload
      id: mega_upload
      run: |
          escape() {
              local content="$1"
              content="${content//'%'/'%25'}"
              content="${content//$'\n'/'%0A'}"
              content="${content//$'\r'/'%0D'}"
              content="${content//&/'%26'}"
              content="${content//#/'%23'}"
              echo "$content"
          }
          
          CMD_DIR="/github/home/.megaCmd"
          LOG_FILE="$CMD_DIR/megacmdserver.log"
          ISO="live-image-amd64-${{ github.ref_name }}.hybrid.iso.gz"
          DIR="/liveDebR"

          mkdir release && gzip -c out/live/live-image-amd64.hybrid.iso > "release/$ISO"
          mkdir -p "$CMD_DIR" && touch "$LOG_FILE" && nohup tail -f "$LOG_FILE" &
          mega-login "$USERNAME" "$PASSWORD"
          mega-put -c "release/$ISO" "$DIR/"
          URL=$(mega-export -a -f "$DIR/$ISO" | grep -o 'https://mega.nz/file/[^"]*')

          BODY="${{ steps.read_release.outputs.RELEASE_BODY }}"
          BODY="${BODY//\{MEGAURL\}/$(escape "$URL")}"
          echo "RELEASE_BODY=$BODY" >> $GITHUB_OUTPUT
      env:
          USERNAME: ${{ secrets.MEGA_USERNAME }}
          PASSWORD: ${{ secrets.MEGA_PASSWORD }}
    
    - name: Upload keyringer & update release body
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/builder/assets/keyringer
        asset_name: keyringer
        tag: ${{ github.ref_name }}
        overwrite: true
        make_latest: true
        body: ${{ steps.mega_upload.outputs.RELEASE_BODY }}
